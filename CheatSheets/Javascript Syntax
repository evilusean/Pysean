// comment something out
Ctrl + / #press control + slash to comment out a highlighted section
<script type="text/javascript"></script> #run javascript inbetween the <script> tags
<script src="js/script.js"></script> #text/javascript is redundant, not needed but good practice
var a = "Hello World!"; #var, declares a variable
console.log(x); #print variable x to the console

Functions:
function a () { ..... } #declares a function
var a = function () { ... } #assigns a variable to a function, value of function assigned-Not the returned result
  a (); #executes function a
function compare (x, y) {return x > y;} #defined arguments without keyword 'var', returns a value, if no value-terminates and returns nothing
  var a = compare(4, 5) #stores variable returned from compare function to 'a', compare(4, "a");=legal function
function #creates a function that accepts arguments
  function multiply(x, y) {
    return x * y;

Operators:
console.log((5 + 4)/ 3); #math operation, operators: +, -, *, / 
== #equal to, instead of x = y use x == y to compare,
=== #strict equality, a string '4' will not equal a number 4 
if (condition) { //  block of code to be executed if the condition is true }
else {//  block of code to be executed if the condition is false}
if (condition1) {//  block of code to be executed if condition1 is true} 
  else if (condition2) {//  block of code to be executed if the condition1 is false and condition2 is true} 
  else {//  block of code to be executed if the condition1 is false and condition2 is false}
&& #and operator, double ampersands, will only pass true if both things on left and right are true
|| #or operator, if a variable is undefined, it will default to this, whatever the operator sees the first true statement
  sideDish = sideDish || "rice"; #will choose the selected sidedish or default to rice if no selection
i++ #increment operator, equivalent to i + 1
Boolean(null) #Boolean wrapper object, tests things to see what it would pass to; All False=false, null, undefined, "", 0, NaN
// For loop
  var sum = 0;
  for (var i = 0; i < 10; i++) { #declare variable i=0, if i is less than 10, i + 1, print i, add sum, redo if less than 10
    console.log(i);
    sum = sum + i;
  }
  console.log("sum of 0 through 9 is: " + sum);

for (var i = 0; i < names.length; i++) {console.log("Hello " +names[i]); } #prints every name in an array for length of names list, 
for (var name in names) { console.log("Hello " + names[name]); } #different notation for same loop as above

Objects:
var company = new Object(); #declares variable company as a new object
company.name = "Facebook"; #creates a key value pair for company object.name = facebook
console.log(company); #prints out data on company object
console.log(company["name"]); #prints out name of company object
// Better way: object literal, to create an object with key value pairs; use this layout
  var facebook = {
    name: "Facebook",
    ceo: {
      firstName: "Mark",
      favColor: "blue"
    },
    "stock of company": 110
  };

Math:
Math.PI #represents the ratio of the circumference of a circle to its diameter, approximately 3.14159.
Math.pow #The Math.pow() static method returns the value of a base raised to a power.

Arrays:
var array = new Array(); /n array[0] = "string /n array[1] = 9 #creates an array with a string and number 9
var names = ["Shawn", "Sean", "Unsean"]; #creates an array with 3 names
var myObj = { name: "Yaakov", course: "HTML/CSS/JS", platform: "Courera" }; #creates a simple array with key:value pairs
for (var prop in myObj) { console.log(prop + ": " + myObj[prop]); } #for loop to loop over every property in above array

DOM(Document Object Model) Manipulation:
document element represents the entire HTML document, allows you to select things in your HTML page by Id
document.getElementById("") #gets element information by the id name of whichever element you input ""
<input id="name" type="text"> #allows you to create a space for inputting typing commands
<button onclick="SayHello();">TextHere</button> #creates a button to interact with input text, runs SayHello function in JS 
var name = document.GetElementById("name").value #gets the value stored in the input box
var message = "Hello " + name + "!"; #SayHello Function
document.getElementById("content").textContent = message; #prints the stored message from above function into the <div id="content"> on HTML page
var message = "<h2>Hello " + name + "!</h2>"; #SayHello Function
document.getElementById("content").innerHTML = message; #prints the saved variable with the header size increase to <div id="content">
document.querySelector("#title") #selects the header with the <h1 id="title"> Id, allowing you to manipulate it using a CSS selector

Handling Events:
Event Handlers=Functions that you bind using methods to certain events that happen in the browser(page loads, user interaction, etc)
onblur="function" #when you lose focus(unhighlight) on an element, the function will perform
onclick="function" #when an element is clicked perform a function
Unobtrusive Event Binding:
document.querySelector("button").addEventListener("click", sayHello); #on the element tag "button" on click use function "sayHello"
document.querySelector("button").onclick = sayHello; #same onclick function as above
document.addEventListener("DOMContentLoaded", function (event) { ... } #when the entire content loads, THEN activate, for id's, etc
document.querySelector("body").addEventListener("mousemove", if (event.shiftKey === true) console.log("x: " + event.clientX); 
  console.log("y: " + event.clientY); #if the shift key is pressed down on the body, it will log the mouse's X and Y coordinates

JSON(Javascript Object Notation):
Lightweight data interchange format, simple textual representation of data, easy to read write and parse, human readable
Subset of Javascript object literal syntax
property names/string values MUST be in double quotes
{
"firstName": "Sean",
"lastName": "Teams",
"supportsCurrentThing": false,
} #JSON Format
JSON is NOT a Javascript Object Literal, need to convert JSON into a JS object literal
to make it a variable string simply add single quotes by the curly braces; var jsonString = '{...}'
var obj = JSON.parse(jsonString); #converts from string to object
var str = JSON.stringify(obj); #convert from object to string
