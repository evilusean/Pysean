Get-Help(Powershell windows):
Get-Help ls #shows a brief summary and all potential parameters of ls command
Get-Help ls -Full #shows more information and full description of parameters
/? (cmd windows):
dir /? #returns information on the dir command

Command History(Windows):
history #shows a list of commands you have typed out recently
  You can scroll through recent commands by pressing 'Up' or 'Down' arrows on keyboard
Ctrl + R #history shortcut: shows recent commands used, start typing a part of recently used command for autofill
#tab completion #type '#' and part of the recently used command and then press 'Tab' to start cycling through matches
clear #clears output on screen

Listing Files Using CLI(Windows):
ls <path>
ls C:\ #Lists all files on C: drive root folder
ls C:\Users\Sean\Desktop #lists all files on desktop
ls -Force C:\ #shows all hidden files on C drive, which aren't normally listed
ls 'C:\Program Files\' -Recurse -Filter *.exe #-Filter parameter filters results for files that match pattern, shows all .exes in Program Files

Changing Directories(Windows Command '\'):
pwd #print working directory
cd #change directory
cd C:\Users\Sean\Documents #changes directory to absolute path of documents
cd.. #goes back/up a level in the directory tree
cd..\Desktop #will take you back to the folder \Sean\ from C:\Users\Sean\Documents to C:\Users\Sean\Desktop
cd ~ #takes you to the path of your home directory
cd ~ \Desktop #takes you to home directory and then to /Desktop directory in it
Tab Completion=Auto Completes the rest of a directory type 'D' press tab and it will go through all that start with 'D'

Creating Directories(Windows):
mkdir #make directory
mkdir New_Folder #makes a folder named 'New_Folder' in current working directory
mkdir New` Folder #windows command can not interpret spaces, use '`' backtick is an escape character in windows, or quotes 'New Folder'

Copying Files and Directories(Windows):
Ctrl + C #copy hotkey Ctrl + V #Paste hotkey
cp #copy command
cp mycoolfile.txt C:\Users\Sean\Desktop #copies mycoolfile.txt to the desktop, requires location as an argument to where it should copy to
cp *.jpg C:\Users\Sean\Desktop\ #copies all files that end with .jpg to desktop
  Wildcard=A character that's used to help select files based on a certain pattern '*' asterisk=anything in windows
cp 'Directory Name' C:\Users\Sean\Desktop\ -Recurse #-Recurse parameter allows you to copy all the contents in a directory
cp 'Directory Name' C:\Users\Sean\Desktop\ -Recurse -Verbose #-Verbose parameter prints a line for each item being copied

Moving/Renaming Files(Windows):
mv #move item command, allows you to rename a file
mv old_name.txt new_name.txt #renames old_name.txt to new_name.txt
mv name.txt C:\USers\Sean\Documents #moves name.txt to \Documents\
mv *.txt C:\Users\Sean\Documents #moves all .txt files to \Documents\

Removing Files and Directories(Windows):
rm #remove command, does not use recycle bin- gone forever, you can add permissions to files to prevent removing important files
rm ~\text1.txt #removes text1.txt forever
rm ~\important_system_file -Force #-Force parameter: use the force to remove files that require special permissions
rm ~\Misc_folder -Recurse #-Recurse parameter: to remove a file, you must do it recursively

Display File Contents(Windows):
cat #concatonate command, used to view files
cat .\text_file.txt #dumps entire contents of file
cat ./randomtext.txt -Head 10 #shows the first 10 lines of a file
cat ./randomtext.txt -Tail 10 #shows last 10 lines of a file
more #displays file one page at a time
more .\document.txt #displays one page of document.txt, one terminal window at a time
  You can interact with the more command file
  Enter=Advances one line at a time
  Space=Advances through one page at atime
  Q=Quits the file and returns to cmd

Modifying Text Files(Windows):
start notepad++ randomtext.txt #runs notepad++ so you can edit a file

Searching Within Files(Windows)Ctrl+F:
  Windows Search Service: automatically indexes files by looking through them on a schedule, stores in a database, disabled on some machines
  Start Menu -> Indexing Options -> Select Users -> Advanced -> File Types Tab -> Index Properties & File Contents -> Ok = Rebuilds the Index
  Notepad ++:Ctrl+Shift+F=Find In Files -> Select Files you want to search(directory/extensions)
sls # select string command: lets you search for text that matches a pattern you find RegEx(Regular Expressions)
Select-String word randomtext.txt #returns word if found and what line
Select-String word *.txt #searches all text documents for word and returns if found

Get-Alias(Powershell Windows):
Get-Alias ls #returns Get-ChildItem as alias, Get-Alias command get's alias for any command used in powershell
Get-Alias echo #returns Write-Output

Input, Output, Pipeline(Windows):
Streams:
  1:stdout
  2:stderr
< #stdin operator, allows you to get input from files
echo woof > dog.txt #prints 'woof' to dog.txt, '>'=redirector operator, sends output to file instead of screen, if file doesn't exist-it creates
echo woof >> dog.txt #If you don't want to overwrite a file use '>>' to append to a file
| #pipe operator for putting together multiple commands
cat words.txt | Select-String st #prints all strings with 'st' from words.txt
cat words.txt | Select-String st > stwords.txt #sends output to a file called stwords.txt
rm secure_file.txt 2> errors.txt #redirects stderr into errors.txt
rm secure_file.txt 2> $null #output is filtered from error messages

Users/Groups(Powershell Windows):
Get-LocalUser #lists users who used local machine
Get-LocalGroup #lists group on local machine
Get-LocalGroupMember Administrators #show's who is a member of the administrators group

Password(Windows):
net user <username> 'some_password' #how to change password from command line
net user <username> * #change password with a prompt, keeps password secret, doesn't log
net user <username> /logonpasswordchg:yes #forces user to change password on next logon

Add/Remove Users(Windows):
net user <username> * /add #creates a new user named <username>, brings up PW dialogue
net user <username> pa55w0rd /add /logonpasswordchg:yes #creates a new user account with throwaway password, changed on logon
net user <username> /del #deletes an account
Remove-LocalUser <username> #deletes an account

Change Permissions(Windows):
icacls #improve/change ACL's(Access control lists) command allows you to change ACL's
icacls ~\Desktop\ #shows user accounts that can use desktop
Powershell: need to remove single quotes for it to work in cmd
icacls 'C:\Vacation Pictures' /grant 'Everyone:(OI)(CI)(R) #grants permissions to everyone group
icacls 'C:\Vacation Pictures' /remove Everyone #removes permissions from everyone group
icacls C:\Windows\Temp 
Command: no single quotes
icacls "C:\Vacation Pictures" /grant Everyone:(OI)(CI)(R) #grants permissions in cmd
Lab 2 Script:
ICACLS C:\Users\Qwiklab\Documents\important_document #checks 'important_document'
ICACLS C:\Users\Qwiklab\Documents\important_document /remove "Kara" #Remove Kara from permissions
ICACLS C:\Users\Qwiklab\Documents\important_document /grant "Kara:(r)" #grants Kara read permissions

Installing Packages(Windows):
/extract:[path]: Extracts the content of the package to the path folder. If a path isnâ€™t specified, then a Browse dialog box appears.
/log:[path to log file]: Enables verbose logging (more detailed information recorded in the log file) for the update installation.
/lang:lcid: Sets the user interface to the specified locale when multiple locales are available in the package.
/quiet: Runs the package in silent mode.
/passive: Runs the update without any interaction from the user.
/norestart: Prevents prompting of the user when a restart of the computer is needed.
/forcerestart: Forces a restart of the computer as soon as the update is finished.

Package Management(Windows):
Find-Package #powershell command, cmdlet, using the windows SxS library system, allows you to search for a library dependancy
Find-Package sysinternals -IncludeDependencies #searches for the sysinternals library with dependencies
Register-PackageSource #adds another register to be searched when looking for libraries/dependancies
Register-PackageSource -Name chocolatey -ProviderName Chocolatey -Location http://chocolatey.org/api/v2 #adds Chocolatey to library search
Get-PackageSource #shows all package sources used for package searching
Get-Package -name sysinternals #shows info on package sysinternals
Install-Package #powershell command, cmdlet, Installs packages
Install-Package -Name sysinternals #installs sysinternals package
Uninstall-Package -Name sysinternals #uninstalls package sysinternals
Installing VLC from URL in Powershell(Lab 3 Windows):
$VLC_URL = "https://download.videolan.org/vlc/last/win64/" #Sets URL Variable
$GET_HTML = Invoke-WebRequest $VLC_URL 
$FILE = $GET_HTML.Links | Select-Object @{Label='href';Expression={@{$true=$_.href}[$_.href.EndsWith('win64.exe')]}} | Select-Object -ExpandProperty href
$URL = ($VLC_URL+$FILE)
$DOWNLOAD_DIR = "C:\users\qwiklabs\Downloads\"
$OUTPUT_FILE = ($DOWNLOAD_DIR+$FILE)
(new-object System.Net.WebClient).DownloadFile($URL, $OUTPUT_FILE)
cmd.exe /c $OUTPUT_FILE /S
Get-Package -Name *vlc* #Once the installation process is successfully completed, verify that VLC has successfully been installed
Uninstalling GIMP Powershell(Lab 3 Windows):
cmd.exe /c "C:\Program Files\GIMP 2\uninst\unins000.exe" /VERYSILENT /NORESTART #Uninstalls GIMP in powershell
Get-Package #ensures that GIMP is uninstalled

Archive(Windows):
Compress-Archive -Path ~\Desktop\CoolFiles -\Desktop\CoolArchive.zip #archives everything in CoolFiles Directory to CoolArchives.zip
Compress-Archive -Path Earth, Mercury, Venus Planets.zip #Compresses Earth, Mercury, Venus files into Planets.zip

Formatting a USB(Windows):
Diskpart #run from command line in a terminal, opens the DISKPART prompt
list disk #lists all current storage devices(disks+USB) currently attached to PC
select disk 1 #selects disk 1
clean #wipes disk 1
create partition primary #creates a blank partition for filesystem on disk 1 usb
select paritition 1 #selects newly created partition
active #activitates partition 1
format FS=NTFS label=my-thumb-drive quick #formats thumb drive 

Virtual Memory Dumps(Windows):
%SystemRoot%\Minidump #history is stored in the  Small Dump Directory which is located in the %SystemRoot%\Minidump file path. 
#To configure a small memory dump file, run the following command using the cmd utility:
Wmic recoveros set DebugInfoType = 3
#Alternatively, this option can be configured in the registry:
Set the CrashDumpEnabled DWORD value to 3
#To set a folder as the Small Dump Directory, use the following command line:
Wmic recoveros set MiniDumpDirectory = <folderpath> 
#Alternatively, the directory option can be set in the registry:
Set the MinidumpDir Expandable String Value to <folderpath>

%SystemRoot%\Memory.dmp #Where records the contents of system memory when the computer stops unexpectedly.
#To configure a complete memory dump file, run the following command using the cmd utility:
wmic recoveros set DebugInfoType = 1
#Alternatively, a complete memory dump file can be configured in the registry:
Set the CrashDumpEnabled DWORD value to 1
#To set a memory dump file, use the following command line:
wmic recoveros set DebugFilePath = <folderpath> 
#Alternatively, the memory dump file can be set in the registry:
Set the DumpFile Expandable String Value to <folderpath>
#To indicate that the system should not overwrite kernel memory dumps or other complete memory dumps, which may be valuable for troubleshooting 
  system problems, use the command:
wmic recoveros set OverwriteExistingDebugFile = 0
#Alternatively, the overwrite setting can be turned off in the registry:
Set the Overwrite DWORD value to 0

mklink(NTFS Filesystems Windows):
mklink #command to make a  link, can not use shortcuts through terminal command line
mklink file_1_symlink file1.txt #makes a symbolic link to file1.txt that can be used in command line
mklink /H file_1_hardlink file1.txt # /H argument makes a hardlink to file1.txt that can point to a file even if it changes it's name

Repairing Corrupted Data(Windows):
fsutil #used to repair corrupted data through command line
fsutil repair query C: #queries C drive and fixes any problems
chkdsk #check disk, used to recover from catastrophic disk corruption/failures-default runs in read only automatically
chkdsk /f D:#/f flag, fixes any problems found on D drive

Processes(Windows):
tasklist #shows all running processes with PID(Process ID's)
Get-Process #powershell commandlet, same as tasklist, shows all currently running process' with PIDs
  Full Get-Process Documentation:
  https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-process?view=powershell-5.1
Get-Process | Sort CPU -descending | Select -first 3 -Property ID,ProcessName,CPU #shows top 3 CPU using processes 
taskkill /pid 5856 #kills process 5856
TaskKill Documentation:
https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/taskkill
SIGINT(Signal Interrupt)=CTRL+C

Lab 5:
Get-Process -Name "totally_not_malicious" #gets details on process totally_not_malicious
taskkill /F /PID 644 #kills process ID 644
Get-Process -Name "totally_not_malicious" #check to ensure process terminated
#There are processes containing the word "razzle" also running on this VM. Get-Process doesn't handle processes with partially-matching names,
#like grep does, and running Get-Process -Name "razzle" would result in no matches. However, you can use "wildcards" (asterisks) to look for 
#processes that contain "razzle" in their name:
Get-Process -Name "*razzle*"
taskkill /F /PID 644 #kills process ID 5880
taskkill /F /PID 644 #kills process ID 1612
Get-Process -Name "*razzle*" #confirms process terminated

Remote Access(Windows):
ssh sean@104.131.122.215 #connects to a remote server PC using SSH(SecureSHell) with an account and IP address
putty.exe -ssh sean@104.131.122.215 22#opens up putty SSH connection, if you installed it on computer -ssh flag username@IPaddress port 22
File Transfer(Windows):
pscp.exe C:\Users\sean\Desktop\MyFile.txt shawn@104.131.122.215: #sends a file over the same network to name@IPaddress target computer
Shared Folder or net share
net share ShareMe=C:\Users\sean\Desktop\ShareMe /grant:everyone, full #users will be able to access shared folder 

Record Commands and output:
Start-Transcript #records commands and saves output, for documentation, and future reuse
https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.host/start-transcript?view=powershell-6
Start-Transcript -Path C:\Transcript.txt #This will write the contents of the session to C:\Transcript.txt. When you want to stop recording you 
  need to call Stop-Transcript. The file created is a plain text file where the commands executed and their outputs are stored.

Managing Services in Windows:
Get-Service #powershell cmdlet, get's information on a service, default lists ALL services on windows
Get-Service wuauserv #gets information on Windows Update service
Get-Service wuauserv | Format-List * #shows all information on the Windows Update Service
Stop-Service wuauserv #stops windows update service
Start-Service wuauserv # starts windows update service
  You can also check all services in the system using the GUI by searching for 'services' in start menu
Set-Service ScardSvr -StartupType Manual #Set-Service command, which allows us to modify some of the properties of the service
Install-WindowsFeature Web-WebServer,Web-Mgmt-Tools -IncludeAllSubFeature #Install-WindowsFeature command to enable these features.
  run this command to enable the few more web serving features

Active Directory(Windows):
C:\Qwiklabs\ADSetup\active_directory_install.ps1 #installs active directory from powershell
C:\Qwiklabs\ADSetup\configure_active_directory.ps1 #configures new install
  #you can now search for "Active Directory" and manage users/groups through the GUI found in start menu search
Join an Active Directory(Windows):
Add-Computer -DomainName 'example.com' -Server 'dc1'
Find Functional Levels(Version):
#https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/active-directory-functional-levels
Get-AdForest
Get-AdDomain
DNS/SRV Records: #if you can't find these records, DNS might be misconfigured
Resolve-DNSName -Type SRV -Name _ldap._tcp.dc._msdcs.example.com #DNS lookup for SRV records, records that are used for DNS domains
w32tm /resync #forces a domain computer to resync
gpupdate /force #forces all GPO(Group Policy Objects) updates to be done immediately
gpupdate /force /sync #forces all GPO updates to be done immediately with a reboot
$env:LOGONSERVER #checks domain variable used to log on to
gpresult /R #creates RSOP report
gpresult /H FILENAME.html #creates a full RSOP report as a readable html

