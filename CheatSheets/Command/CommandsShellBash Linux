ls --help #Add --help flag to get more information on list command such as summary and potential flag parameters
man ls #Manual Command; used to show manual pages to get more information on list command such as summary and potential flag parameters

Command History(Linux):
history #shows a list of commands you have typed out recently
  You can scroll through recent commands by pressing 'Up' or 'Down' arrows on keyboard
Ctrl + R #history shortcut: shows recent commands used, start typing a part of recently used command for autofill
clear #clears output on screen

Listing Files(Bash/Linux):
ls / #lists all directorys under root directory
ls -l / #-l long flag, shows detailed information(dates/size/file permissions/owner/size) of files in the format of a long list
ls -a / #-a All flag, shows all files in a directory including hidden files
Important Directories in Linux:
  /bin #stores essential binaries/programs
  /etc #stores important system configuration files
  /home #personal directory for Users
  /proc #contains information about currently running processes
  /usr #For user installed software
  /var #stores system logs

Changing Directories(Linux Bash same as Windows '/'):
pwd #print working directory
cd #change directory
cd C:/Home/Sean/Documents #changes directory to absolute path of documents
cd ../Documents #uses relative path to change to documents folder
cd ~ /Desktop #takes you to home directory and then to /Desktop directory in it
cd ../D <tab> #tab completion type 'D' press tab and it will print all that start with 'D'
Creating Directories(Linux):
mkdir #make directory
mkdir New_Folder #makes a folder named 'New_Folder' in current working directory
mkdir New/ Folder #linux command can not interpret spaces, use '/' forwardslash is an escape character in linux, or quotes 'New Folder'
mkdir dir1 dir2 dir3 #creates multiple directories
  -p # allow mkdir to create parent directories if they don't exist
  -m # (mode) used to set permissions of directories during creation
  -v # run command in verbose mode
touch empty_file #creates file named empty_file
  -c # do not create file if it doesn't exist

Copying Files and Directories(Linux):
Ctrl + C #copy hotkey Ctrl + V #Paste hotkey

Copying Files and Directories(Linux):
Ctrl + C #copy hotkey Ctrl + V #Paste hotkey
cp #copy command
cp mycoolfile.txt ~/Desktop #copies mycoolfile.txt to the desktop, requires location as an argument to where it should copy to
cp *.jpg ~/Desktop #copies all files that end with .jpg to desktop
  Wildcard=A character that's used to help select files based on a certain pattern '*' asterisk=anything in windows
cp -r 'Directory Name' ~/Desktop #-r Recurse parameter allows you to copy all the contents in a directory
cp -r -v 'Directory Name' ~/Desktop #-v Verbose parameter prints a line for each item being copied
cp /home/user/source_file /home/user/duplicates/target_file #copies source file to target file

Moving/Renaming Files(Linux):
mv #move item command, allows you to rename a file
mv blue_document.txt ~/Documents #moves blue_document into documents folder
mv *_document.txt ~/Desktop #moves ALL _document.txt files to desktop
mv /home/user/source_file /home/user/moved_files/target_file #moves source file to target file

Removing Files and Directories(Linux):
rm #remove command
rm text1.txt #removes text1.txt
rm -r misc_folder #-r Recursive flag: to remove a folder you must do it recursively
rm -r non_empty_dir # removes non empty directory
rm /home/user/duplicates/target_file #removes target file

Display File Contents(Linux):
cat #concatonate command, used to view files
cat text_file.txt #dumps entire contents of file
head randomtext.txt #shows the first 10 lines of a file
tail randomtext.txt #shows last 10 lines of a file

less #displays file one page at a time
less document.txt #displays one page of document.txt, one terminal window at a time
less /path/to/file/file_name
  You can interact with the less command file
  Up and Down Keys=Advances one line at a time
  PageUp/PageDown=Advances through one page at a time
  g=Advances to the beginning of a file
  G=Advances to the end of a file
  /word_search=Allows you to search for a word or a phrase
  /<word you want to search>
  Q=Quits the file and returns to shell

Modifying Text Files(Linux):
nano filename.txt #opens a file in nano text editor, VIM for linux chads
nano /path/to/existing/file # opens file
  Ctrl(^)+G = Get Help
  Ctrl(^)+K = Cut Text
  Ctrl(^)+X = Exit
  CTRL(^)-O = Save

Searching Within Files(Linux):
grep #command that allows searching with RegularExpressions(RegEx)
grep word randomtext.txt #finds word in randomtext.txt and prints line if matches
grep word *.txt #searches all text files for a word that matches
  -r: search recursively
  -w: match the whole word
  -n: only in line number
  -e: match pattern
  --include and --exclude: include and exclude files in the search
  --include-dir and --exclude-dir: include or exclude directories in the search

Input, Output, Pipeline(Linux):
echo woof > dog.txt #prints 'woof' to dog.txt, '>'=redirector operator, sends output to file instead of screen, if file doesn't exist-it creates
echo woof >> dog.txt #If you don't want to overwrite a file use '>>' to append to a file
< #stdin operator, allows you to get input from files
ls /dir/fake_dir 2> error_output.txt #sends error message to error_output.txt
less /var/log/syslog 2> /dev/null #/dev/null file is used to filter out error messages(null)
ls -la /etc | grep bluetooth #takes output to see how many files in directory /etc have 'bluetooth'

Users/Groups (Linux):
Root User #created when linux installed, has unlimited access to machine
su #substitute user command allows you to change to a different user
sudo #grants superuser privileges
superuser do #grants superuser privileges
cat sudo /etc/group #view who is a member of each group 4 tags seperated by colons; groupname:password:groupID:users in group
cat /etc/passwd #shows encrypted passwords for users

Change Passwords(Linux):
passwd <username> #changes password for <username>, asks for current and new, stores in /etc/shadow can only be read in root encrypted
sudo passwd <username> -e #expired flag, forces a user to reset their new password

Add/Remove User(Linux):
sudo useradd <username> #adds a user, with basic configurations and home directory
sudo userdel <username> #deletes a user

File Permissions(Linux):
Linux permissions are seperated into sets of 3; first trio refers to permission of owner of file/second trio=group permissions/third=all other user
  -Owner: u
  -Group: g
  -All other Users: o
ls -l my_cool_file #shows permissions of a file
chmod #change mode command: change file access permissions 3x types: owner 'u', group 'g', other users 'o', Use + or - for permissions
chmod u+x my_cool_file #gives file owner 'u' executable permissions 'x'
chmod u-x my_cool_file #removes executable permission from owner
chmod ugo+r my_cool_file #gives everyone read permissions
chmod 754 my_cool_file #gives permissions 754=Owner(rwx, 7),Group(rx, 5),Other Users(4, r)
Numerical Format: 
  -Read(4, r): Allows someone to read the contents of a file or folder
  -Write(2, w): Allows someone to write information to a file or folder
  -Execute(1, x): Allows someone to execute a program
sudo chown sean my_cool_file #change owner command; changes owner of a file to sean
sudo chgrp some_group my_cool_file #change group command; changes group of a file
sudo chmod u+s my_cool_file #Enables 's' SetUID special permission bit that is used to allow a file to be run as the owner of the file
sudo chmod g+s <file> #SetGID(SetGroupID) special permission to allow it to to run as a group ID
sudo chmod +t my_folder #'t'=stickybits allows you to write to a file but not delete
sudo chmod a+r not_so_important_document #use "a+r". This adds read permission to everyone (owner, group, and other).
sudo chmod 764 not_so_important_document #numerical format to give all neccesary permissions quicker
sudo chmod a+rwx public_document #gives all read write execute permissions
sudo chmod 777 public_document #numerical way to give all permissions to everyone

Installing Software Packages(Linux Debian):
dpkg #debian package command
sudo dpkg -i atom-amd64.deb #-i install flag, installs atom text editor 
sudo dpkg -r atom #-r remove flag, removes atom from linux
dpkg -l #-l list flag, lists all debian packages(programs) installed on a linux machine
dpkg -l | grep atom #uses pipe command to search for atom installed on a linux machine
sudo dpkg -i google-chrome-stable_current_amd64.deb #installs google chrome
sudo dpkg -i /home/qwiklab/downloads/sublime-text_build-3211_amd64.deb #installs sublime text from downloads folder
sudo apt install -f #run after above command to install dependancies
dpkg -s sublime-text #checks if sublime text was correctly installed, it was
sudo apt install p7zip-full #installs 7zip
sudo apt remove gimp #uninstalls gimp

Linux Archive:
To extract a file using 7zip, use the command 7z and the flag 'e' for extract, and then the file you want to extract 
tar #tar command http://www.linfo.org/tar.html
7z # 7zip command
7z e my_archive.tar # e flag, extracts archive.rar
tar -cvf Planets.tar --absolute-names /home/qwiklab/documents/Earth /home/qwiklab/documents/Mercury /home/qwiklab/documents/Venus 
  #above command archives from file location to Planets.tar

Package Management(APT=Advanced Package Tool):
sudo apt install gimp #installs gimp with dependancies
sudo apt remove gimp #removes gimp and dependancies
sudo apt update #updates list of packages in software repository
sudo apt upgrade #installs any outdated packages , run after update

Installing Devices/Drivers(Linux):
From the command-line, enter $ lpadmin -p printername -m driverfilename.ppd 
Lpadmin #is the printer administrator command.
The -p printername command adds or modifies the named printer. 
The -m driverfilename.ppd command installs the postscript printer description (PPD) driver filename that you provide. 
  The file should be stored in the /usr/share/cups/model/ directory.
Enter $ man lpadmin to open the manual for the lpadmin command to find additional command line options.
#The most common way to check if a device is installed is to use the “ls” (lowercase L and S) command, which means “list”. 
$ ls /dev #- Lists all devices in the /dev folder 
$ lscpci #- Lists devices installed on the PCI bus 
$ lsusb #- Lists devices installed on the USB bus
$ lsscsi #- Lists SCSI devices, such as hard drives
$ lpstat -p #- Lists all printers and whether they are enabled
$ dmesg #- Lists devices recognized by the kernel

Updating Kernel:
uname #gives system information
uname -r #shows kernel version
sudo apt full upgrade #updates kernel if available

Formatting/Partitioning Drives(Linux):
Parted Tool(Linux)=Supports both MBR and GPT
sudo parted -l #lists out disks connected to computer
sudo parted /dev/sdb #runs interactive mode parted on /sdb/ thumbdrive
  print #from interactive mode, shows currently selected drive information
  quit #from interactive mode, quits
  mklabel gpt #makes partition table gpt
  mkpart primary ext4 1MiB 5GiB #requires what type of partition you want to make, start of disk, and end of disk (1MiB=1024 bytes)
sudo mkfs -t ext4 /dev/sdb1 #formats filesystem, from command line mode

Lab 4(Formatting/Partitioning Linux):
lsblk #lsblk command. This command gathers information about all devices attached to the system, and prints them out using a tree-like structure.
df -h #df command. This command is normally used to display the amount of space available on the file system.
  #It lists all block devices with the available space on them. Use the -h option to display file sizes in human readable format.
sudo fdisk -l #display partition information using the fdisk command. You can also use the -l option to list partitions in the block.
  #You can pass a device name to the fdisk command to list the partitions contained in that device.
sudo fdisk -l /dev/sdb #To list partitions contained in /dev/sdb, pass /dev/sdb to the fdisk command.
sudo fdisk /dev/sda #Start fdisk by passing the disk you want to partition as the parameter.
  #fdisk will start in interactive mode. You can use 'm' to use help provided by the command.
  #You can use 'p' to show details about partitions on the disk.
  #Enter 'q' to exit interactive mode when you are finished exploring
  #To create a new partition, the command control n is used. However, since all the space on the disk is currently allocated, 
    #you'll need to first free up space by deleting the default partitions.
  #Use the d command control to delete the default partitions. When you issue the d command control, fdisk asks you to enter the number of 
    #partitions you want to delete. Since you have twelve partitions, fdisk automatically selects the last partition by default, and 
    #pressing Enter deletes the last partition. Repeat this process until you delete all the twelve partitions.
  #You're now able to create your new partitions. Enter the command control for creating a new partition, n.
    #You'll then need to provide the starting sector (memory location) of the new partition, from where you want to allocate.
    #Here, press Enter to select the default value 2048.
  #Provide the last sector of the new partition, up to where you want to allocate. The difference between the first and last sectors
    #makes up the total size of the partition. Disk sector represents units used to measure the size on disks. Each sector stores a fixed 
    #amount of data. In lots of hard disks, for example, a sector stores 512 bytes. To create the first 1GB partition, 
    #enter 2097200 (divide the original partition by 10).
  #Use the command control n again for a new partition.
  #Select partition number 2 to issue partition numbers in sequence.
  #Select the default partition starting sector, which is the next sector from the last partition you allocated.
  #Also select the default last sector, which will be the last sector of the remaining disk space.
  # Enter command control t to change the partition type, and select the first partition.
  #You can use the command control L to view a list of all partition types.
  #Enter 19 to change the partition type to ‘Linux swap', and press Enter.
  #commit them to the disk by using the w command.
lsblk #To do this, use lsblk again to find the disk you want to create the file system type in.
sudo mkfs -t ext4 /dev/sdb2 #Format the second partition in your unmounted drive (sdb2 or sda2) to ext4 using this command:
sudo mount /dev/sdb2 /home/my_drive #mount /dev/sdb2 to a location on the file system , Mount it on the directory /home/my_drive
lsblk #verify the file systems and block devices attached to your system using lsblk command.

Mounting(Linux): Often done automatically
cd/dev/sdb #you can not cd into a drive until it is mounted, because it isn't a directory.. yet, you need to create a directory for the drive
sudo mount /dev/sdb1 /my_usb_folder/ #mounts sdb partition 1 to my_usb_folder
cd /my_usb_folder/ #changes directory correctly, after mounting
sudo umount /my_usb_folder #unmounts thumbdrive attached to my_usb_folder
sudo umount /dev/sdb1 #unmounts thumbdrive by name
/etc/fstab #file that allows you to automatically mount files on system boot; contains unique device ID's, mount points, filesystems, +more
sudo blkid #shows UUID(Universal Unique IDs) for devices

Swap Space(Linux):
sudo parted /dev/sdb #selects drive with parted tool to work with
  print #prints selected drives information
  mkpart primary linux-swap 5GiB 100% #makes partition for swap space
sudo mkswap /dev/sdb2 #makes swap on newly created partition
sudo swapon /dev/sdb2 #turns on swap space
/etc/fstab #file that allows you to automatically mount files on system boot; can add swap space automatically on boot up
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/storage_administration_guide/ch-swapspace
  #Official Docs/Commands

Files/Linking(Linux):
ln -s #creates a softlink to a file, like a shortcut that can be used in a terminal
ln -s file1 file1_softlink #-s parameter creates a softlink to file1
ln #without -s command creates hardlink, points to an inode on the inode table, a physical spot on the disk, can change name of file and still use
ln file2 file2_hardlink #creates a hardlink of file2 that can be used even if file2 changes name

Disk Usage(Linux):
du -h #disk usage command to show disk usage, if you don't specify a directory it will automatically do current one, -h flag shows it human readabl
df -h #disk free command to show how much free space available on entire machine, -h flag shows it in human readable form

FileSystem Repair(Linux):
fsck #filesystem check, make sure file system isn't mounted before using, may damage filesystem
sudo fsck /dev/sda #runs fsck on sda drive
fsck [ -n ] [ -p ] [ -y ] [ -f ] [ FileSystem1name - FileSystem2name ... ]
The -n flag - Sends a “no” response to all fsck questions and does not allow fsck to write to the drive. 
The -p flag - Prevents error messages for minor problems from displaying while automatically fixing those minor errors. Outside of recovering 
  from data corruption, it is a best practice to run the fsck -p command regularly at startup as a preventative measure. 
The -y flag - Sends a “yes” response to all fsck questions to automatically attempt to repair all inconsistencies found. This flag should be 
  reserved for severely corrupt file systems only. 
The -f flag - Runs a fast check that excludes file systems that were successfully unmounted for shutdown before the system crashed. 
FileSystem#name - If you do not specify a file system, the fsck command checks all file systems in /etc/filesystems, where the check attribute
  is set to true.
To see more advanced flags, use the man fsck command.
                  a. To have the fsck command check all of the default file systems and prompt the user on how to handle each inconsistency 
                    found, simply enter at a command line:
                 b. For ext, ext2, ext3, and ext4 file systems, the e2fsck command can be used:
                c. To have the fsck command check specific file system(s) and automatically fix any inconsistencies found, enter: 
2. The fsck command outputs an exit value, or code, when the tool terminates. The code is the sum of one or more of the following conditions:
0 = All scanned file systems have been restored to a functional state.
2 = fsck did not finish checks or repairs due to an interruption.
4 = File system has changed and the computer needs to be rebo
IBM fsck docs:
https://www.ibm.com/docs/en/aix/7.2?topic=f-fsck-command

Processes(Linux):
Full Documentation:
http://man7.org/linux/man-pages/man1/ps.1.html
ps #command that shows all currently running processes with PID(Process ID's)
ps -x #-x Flag, The x option instructs ps to list the processes without a controlling terminal.
ps -ef #-e flag, get's all process even those being run by other users, -f flag=Full, get's full details
ps -ef | grep Chrome #pipe grep command, show's  all processes that have to do with Chrome
/proc #Everything in Linux is a file, including processes, to view the file that corrspond with processes, check the '/proc' directory
cat /proc/1805/status #gets even more details directly from the process directory of PID 1805
kill #terminates a process
kill 10235 #terminates process with ID 10235
kill -KILL 10392 #sends SIGKILL signal, kills process instantly without time to cleanup to process ID 10392
kill -TSTP 10754 #sends SIGTSTOP signal, terminal stop Signal that pauses a process, puts it in a suspended state to process ID 10754
  Can also send SIGTSTOP signal using Ctrl+Z
kill -CONT 10829 #sends SIGCONT signal, resumes a process for process ID 10829

Lab 5:
ps -aux | grep "totally_not_malicious" #searches for process totaly_not_malicious
sudo kill 312 #kills process ID 312
sudo kill 319 #kills process ID 319
ps -aux | grep "razzle" #searches for process with "razzle"
sudo kill 313 #kills process ID 313-318
ps -aux | grep "razzle" #verify that processes have been terminated

Resource Monitoring(Linux):
top #shows top processes, using most resources, to escape new top terminal press 'q'
uptime #shows information about current time, how long system running, how many users logged on, and load average of machine
lsof #lists open files, and what processes are using them
