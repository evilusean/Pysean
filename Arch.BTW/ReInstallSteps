All the steps taken to get Arch Linux back up to a funcSeanall state, all packages installed, how to get nvidia GPU working again, how to install all packages
Links\Resources\Commands for each step - Hopefully this will be the last time I have to do this, can't mount boot this time, need to repartition drives 
https://wiki.archlinux.org/title/Installation_guide

Step 1 : Bootable USB + Wifi - 
Restart -> Press (F2) + (F12) -> F8 -> Boot from USB -> Arch Linux

iwctl
device wlan0 set-property Powered off
device wlan0 set-property Powered on
station wlan0 scan
station wlan0 get-networks
station wlan0 connect
D7ED9E936EDF
'quit' 

Step 2 : Partition the disks 
fdisk -l #lists all partitions in detail
cfdisk #tool to partition disks with GUI
  /boot partition = b W95 FAT32 = 2Gigs
  / partiton(root) = 83 Linux = 45Gigs
  /home partition = 83 Linux = Whatever is left off SSD

Step 2.5 : Make Filesystems :
  mkfs.fat -F 32 /dev/sda1
  mkfs.ext4 /dev/sda2
  mkfs.ext4 /dev/sda3

Step 3: Mount Partitions (skip this step, use 'archinstall', easier):
mount /dev/sda2 /mnt # 'mount /dev/sda2 /' for root, I messed this up even after doing it 4 times in > 2 weeks, it's 'mount /dev/sda2 /mnt'
mount /dev/sda1 /mnt/boot # 'mount /dev/sda1 /boot' for boot 
mount /dev/sda3 /mnt/home # 'mount /dev/sda3 /home' for home
swapon /dev/sdb1 

Step 3.5 : archinstall
  Go through the installer to ignore above section, easier this way, you can set mount points afrer step 2, 2.5 (you still need manual partititon and filesystems)
Assign mountpoints (manual partition) : 
  '/boot' -> sda1 (2Gigs)
  '/' -> sda2 -> 45Gigs
  '/home' -> sda3 -> whatever is left
Disk Encryption : LUKS 
BootLoader : Grub (default)
HostName : ArchSean
Root Password :
User Account : (Set up in chroot)
Type -> Desktop -> KDE Plasma / Greeter : sddm / Graphics : All open source(install after) - Error here, used 'Intel (open-source)'
Audio : Pulseaudio (pipewire is better)
Kernel : linux-hardened
Network Configuration : Use NetworkManager
TimeZone : 
Optional Repositories : multilib
ERROR : if you get an error from packages (future sean) clear the cache, exit arch install type 'pacman -Scc' 

Step 4 : Create a user in arch-chroot
'useradd -m -G wheel ArchSean'
'passwd ArchSean'
'exit'
'reboot'

Add a user to Sudoers:
'su' #log in as a superuser
usermod -aG wheel ArchSean
%wheel ALL=(ALL) ALL
'/etc/sudoers'
usermod -aG sudo ArchSean
ArchSean ALL=(ALL)       ALL

Log into Internet With Hyprland on first install :
Open Terminal in Hyprland:
Super + Return (or Super + Enter) (or Super + flail hail mary)
Check NetworkManager Status:
'sudo systemctl status NetworkManager'
(If not active, enable and start: sudo systemctl enable --now NetworkManager)
Scan for Wi-Fi Networks:
'nmcli device wifi list'
Connect to Wi-Fi Network:
nmcli device wifi connect <YOUR_WIFI_SSID> password <YOUR_WIFI_PASSWORD>
Verify IP Address: 'ip a'

Hyprland Install Script : 
https://github.com/end-4/dots-hyprland
bash <(curl -s "https://end-4.github.io/dots-hyprland-wiki/setup.sh")

Step 5 : Install Graphics
https://github.com/evilusean/Pysean/blob/main/Sean/FixSean/NVIDIDA
Use Network Manager, Sign in to WIFI.
Ctrl + Alt + T #new terminal
su #log in as superuser, until you update 'sudoers'
sudo pacman -S sudo #sudo install sudo

Nvidia :
sudo pacman -S nvidia-dkms nvidia-utils nvidia-settings nvidia-prime opencl-nvidia switcheroo-control nvidia
https://wiki.archlinux.org/title/NVIDIA_Optimus#Use_NVIDIA_graphics_only
/usr/share/sddm/scripts/Xsetup
'xrandr --setprovideroutputsource modesetting NVIDIA-0
xrandr --auto' # add everything in '' to the file '/usr/share/sddm/scripts/Xsetup'

First enable 'multilib' - 'sudo nano /etc/pacman.conf' uncomment '#[multilib] #Include = /etc/pacman.d/mirrorlist'
Vulkan Drivers (I don't know which one of these fixes it, but it is one of them) :
https://wiki.archlinux.org/title/Vulkan
sudo pacman -S vulkan-icd-loader package
sudo pacman -S lib32-vulkan-icd-loader
sudo pacman -S vulkan-intel
sudo pacman -S lib32-vulkan-intel
sudo pacman -S nvidia-utils
sudo pacman -S lib32-nvidia-utils
sudo pacman -S vulkan-nouveau
sudo pacman -S lib32-vulkan-nouveau
export VK_DRIVER_FILES=/usr/share/vulkan/icd.d/nvidia_icd.json #type in terminal 

Wine (ensure multilib is enabled, if not follow guide below): 
https://wine.htmlvalidator.com/install-wine-on-arch-linux.html
'cat /etc/pacman.conf | grep -i multilib' #check if they are commented, if yes, remove '#'
'sudo nano /etc/pacman.conf'
sudo pacman -S wine wine-mono wine-gecko
sudo pacman -S lutris
Add external Drives/partitions with gnome-disk-utility -
Open Lutris -> '+' 'Install a Windows Game from an executable' -> Add external drive/partition with game folder -> add Executable in that directory
Right click installed game -> Configure -> Runner Options -> Enable DXVK / Enable VKD3D Vulkan 

Optimus-Manager (for using AI models and CUDA - which you can't use lutris or prime-run on, for future seanm above fix works for getting GPU/games working) :
https://github.com/Askannz/optimus-manager

Mount Drives :
sudo pacman -S gnome-disk-utility
search 'disks' to open gnome disk utility
add drives, 'Edit Mount Options' -> Switch off 'User Session Defaults' -> 'Mount at system startup' -> Identify As '/dev/sdb2' + Mountpoint (Fstab will be updated)

Packages :
sudo pacman -S code #install VScode
sudo pacman -S chromium 
sudo pacman -S firefox #don't use firefox, use librewolf 'yay -S librewolf'
sudo pacman -S btop
sudo pacman -S mpd
https://github.com/evilusean/Pysean/blob/main/MPD%5CNCMPCPP/mpd.conf
sudo pacman -S mpc
sudo pacman -S ncmpcpp
https://github.com/evilusean/Pysean/blob/main/MPD%5CNCMPCPP/.ncmpcpp.config
https://archlinux.org/packages/extra/x86_64/signal-desktop/
https://itsfoss.com/install-skype-arch-linux/
https://analyticalnahid.medium.com/how-to-install-git-and-github-desktop-in-arch-linux-bb70c56751d8
sudo pacman -S tmux
https://github.com/evilusean/Pysean/blob/main/TMUX/tmux.conf
sudo pacman -S zsh
https://github.com/evilusean/Pysean/blob/main/VIM/zshrc
# ADD ALL CONFIGS TO ABOVE - 
chsh ArchSean #changes default shell, link to new... just use below, correct way
chsh -s /bin/zsh #changes default shell for current user
sudo pacman -S git -y
sudo pacman -S xclip
sudo pacman -S signal-desktop
sudo pacman -S nodejs npm
sudo npm install -g create-react-app
sudo npm install -g create-next-app
sudo pacman -S fzf
sudo pacman -S libreoffice
sudo pacman -S gimp
sudo pacman -S blender
sudo pacman -S reaper
sudo pacman -S obsidian
sudo pacman -S qbittorrent

Install Yay :
sudo pacman -Syu
sudo pacman -S --needed --noconfirm base-devel git
git clone https://aur.archlinux.org/yay-git.git
sudo mv yay-git /opt/
cd /opt/yay-git
makepkg -si

Install Github Desktop:
yay -S github-desktop-bin --noconfirm

#check these to see if there is a 'bin' version, I know there is one for librewolf, I've been installing ungoogled-chromium for over an hour,builld from scratch Vs 'bin' speeds it up,
yay -S ungoogled-chromium
yay -S librewolf

yay -S anki
sudo pacman -S mpv #will be required for audio 
by default, anki will save all progress on the main SSD '~/.local/share/Anki2/' - so if you delete the SSD(as I have, 3 times...) you will lose everything. make sure to 'switch profiles' to an external HD. 
cp -r ~/.local/share/Anki2/ #create a symlink, so now it will update the backup instead of the one that's on the maindrive(that's been wiped, with all backups, 3 times...)
ln -s #again, create a symlink to the main drive, so if I need to reinstall arch from boot, I don't have to do 100's of cards a day to get caught up on >1+ year of anki work

https://code.visualstudio.com/
https://aur.archlinux.org/packages/visual-studio-code-bin
yay -S visual-studio-code-bin #install this version instead of pacman, can't get copilot on the 'pacman -S code' for whatever reason

cursor.com #download app image, update paths so you can search for it = add to '/usr/share/applications/cursor.desktop'

Tmux Plugin Manager(TPM):
https://github.com/tmux-plugins/tpm
https://github.com/christoomey/vim-tmux-navigator

Install Fonts : 
sudo pacman -S noto-fonts-cjk noto-fonts-emoji noto-fonts # installs A Japanese capable font
yay -S ttf-freefont ttf-ms-fonts ttf-linux-libertine ttf-dejavu ttf-inconsolata ttf-ubuntu-font-family
Download a nerdfont, run this in the terminal from the directory the zip was downloaded as one command - Use JetBrainsMono, it has all the icons you need for NVChad:
unzip "*.zip" -d ~/.local/share/fonts
fc-cache -fv
cd ..; rm -rf fonts

Test New Fonts:
fc-list | cut -d: -f2 | sort | uniq

NVChad - Install Fonts Above - There was a breaking change, added a new one-liner below:
https://nvchad.com/docs/quickstart/install/#pre-requisites
https://github.com/ProgrammingRainbow/NvChad-2.5
sudo pacman -S neovim
sudo pacman -S xclip
git clone https://github.com/NvChad/starter ~/.config/nvim && nvim
#Original One Liner, if below doesn't work, 
git clone https://github.com/ProgrammingRainbow/NvChad-2.5 ~/.config/nvim && nvim
#Better config than the original NVChad script, maybe changes next time I need to reinstall, future sean take note - I tried this script 2 days ago, worked, today didn't. 

https://github.com/gorhill/uBlock #not even a day into a fresh install, and already getting Ad-gry, it's where you get angry from ads.

Uninstall NVim + configs (if you mess up):
rm -rf ~/.config/nvim
rm -rf ~/.local/state/nvim
rm -rf ~/.local/share/nvim

Gimp 3.0 :
sudo pacman -S gimp
sudo pacman -S flatpak #temporary work around past sean did to mess around with the new software, future Sean, if you see this delete below lines, this is suboptimal, programs can't find it
flatpak install --user https://flathub.org/repo/appstream/org.gimp.GIMP.flatpakref
flatpak list #I couldn't find it in the program search or run in terminal, just got released, the pacman version was 2.1, future Sean, just use pacman so it can be found in terminal/programs
flatpak run org.gimp.GIMP #will run gimp, temporary fix until pacman works
flatpak uninstall org.gimp.GIMP #will uninstall, this is for future Sean after pacman get's updated

Change Settings :
Breeze - Dark - RED #FF0000
Rice KDE (MPD/NCMPCPP configs)
Optimus Manager
https://github.com/Askannz/optimus-manager
Wallpapers : 
https://www.peakpx.com/en/hd-wallpaper-desktop-vlqfo/download/1920x1080

Fix Keyboard Backlight (Fn + F4) :
yay -S asusctl supergfxctl
sudo systemctl enable asusd
sudo systemctl start asusd
asusctl -k #check backlight
asusctl -k <level> #sets level

Spotify (for languages) :
https://wiki.archlinux.org/title/Spotify
sudo pacman -S spotify-launcher # requires a different pacman package, not spotify, will work from this link

Get PS4 Dualshock controller working:
https://bbs.archlinux.org/viewtopic.php?id=292399
'/etc/bluetooth/input.conf' change 'ClassicBondedOnly=false'
#it looks, you will need to manually restart the service to connect via bluetooth as well:
sudo systemctl stop bluetooth.service 
sudo systemctl start bluetooth.service 
sudo systemctl status bluetooth.service
#you also need to disable 'steam overlay' it's in the settings somewhere, only needs to be done once.
press top left 'SHARE' and middle 'Playstation' button to sync, after enabling bluetooth, should work

#for proton GE(glorious eggroll proton - for steam overwatch) :
yay -S asdf-vm 
asdf plugin add protonge
asdf install protonge latest
sudo pacman -S nvidia-prime
prime-run steam
sudo pacman -S lib32-nvidia-utils lib32-mesa-libgl vulkan-icd-loader lib32-vulkan-icd-loader
sudo pacman -S nvidia nvidia-utils lib32-nvidia-utils nvidia-settings
#the UI was messed up, this fixed it, now it works with GPU, next 3 lines in terminal will boot steam with GPU instead of built in
unset GDK_SCALE
unset QT_SCALE_FACTOR
prime-run steam
#in order to fix overwatch 2, install the 80gigs on a slow HD, move the 'shadercache' with a sym link to the SSD, and it should be playable after that
