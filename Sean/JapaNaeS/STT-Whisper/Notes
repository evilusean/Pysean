https://github.com/openai/whisper
Going to just follow the github repo for install locally, I should already have python3 and all dependancies installed (pytorch, torchaudio, etc) 

Main drive getting full (<20GB) , small amount remaining on main SSD, using a new way to install via pip commands
https://betterstack.com/community/questions/how-to-install-packages-from-requirements-txt/
https://stackoverflow.com/questions/2915471/install-a-python-package-into-a-different-directory-using-pip
  If you want to install the packages to a specific location, you can use the '--target' option to specify the directory where you want the packages to be installed
  pip install -r requirements.txt --target=/path/to/target/directory #will install 'requirements.txt' to specified directory
  pip install --target d:\somewhere\other\than\the\default package_name
You can also use the -t or --target option to specify a different directory for each package in the requirements.txt file. To do this, you will need to add the -t or --target option to each line in the requirements.txt file
  followed by the path to the directory where you want the package to be installed. For example:
  package1 -t /path/to/package1/directory
  package2 -t /path/to/package2/directory
  package3 -t /path/to/package3/directory
pip install --install-option="--prefix=$PREFIX_PATH" package_name 
  #You might also want to use --ignore-installed to force all dependencies to be reinstalled using this new prefix. 
  #You can use --install-option to multiple times to add any of the options you can use with python setup.py install (--prefix is probably what you want, but there are a bunch more options you could use).
pip install --target /myfolder [packages]
  #Installs ALL packages including dependencies under /myfolder. Does not take into account that dependent packages are already installed elsewhere in Python. 
  #You will find packages from /myfolder/[package_name]. In case you have multiple Python versions, this doesn't take that into account (no Python version in package folder name).
pip install --prefix /myfolder [packages]
  #Checks if dependencies are already installed. Will install packages into /myfolder/lib/python3.5/site-packages/[packages]
pip install --root /myfolder [packages]
  #Checks dependencies like --prefix but install location will be /myfolder/usr/local/lib/python3.5/site-packages/[package_name].
pip install --user [packages]
  #Will install packages into $HOME: /home/[USER]/.local/lib/python3.5/site-packages Python searches automatically from this .local path so you don't need to put it to your PYTHONPATH.
  #=> In most of the cases --user is the best option to use. In case home folder can't be used because of some reason then --prefix.

/media/sean/MusIX/OpenAI-Whisper/pip
pip install --target /media/sean/MusIX/OpenAI-Whisper/pip 
pip install -U openai-whisper #installing openAI whisper
pip install --target /media/sean/MusIX/OpenAI-Whisper/pip -U openai-whisper #updated directory, main SSD is getting full~
sudo apt update && sudo apt install ffmpeg #should already be installed, updating
pip install --target /media/sean/MusIX/OpenAI-Whisper/pip setuptools-rust #following guide
whisper --help #got an error running first command, trying to fix
Command 'whisper' not found, did you mean:
https://github.com/openai/whisper/discussions/531
pip install --target /media/sean/MusIX/OpenAI-Whisper/pip --upgrade --no-deps --force-reinstall git+https://github.com/openai/whisper.git
I installed it to the new directory, and added it to the path, it still won't run correctly - I found an old minecraft installed and could delete that to regain 16 gigs, and just install it in the default directory 'home'
even after updating the .bashrc it still won't work, going to install it the regular way with pip, then try again, I'll only use the 'medium' model instead of 'large' for translating Slovak/Japanese
installed without the '--target', works now.

you can specify the directory you want to saved the download with download_root:
import whisper
model = whisper.load_model('large', download_root='/media/sean/MusIX/OpenAI-Whisper/pip')
#going to try above code to download the model where I have a tonne of space, 2.88 gigs for large model, not bad, some other AI's I used (midjourney) were 10-25-50gigs just to run them locally. 

New Error:
/bin/python3 /media/sean/SeanDrive/Code/Pysean/Sean/JapaNaeS/STT-Whisper/Whisper-InstallModel-CustomDir.py
Traceback (most recent call last):
  File "/media/sean/SeanDrive/Code/Pysean/Sean/JapaNaeS/STT-Whisper/Whisper-InstallModel-CustomDir.py", line 3, in <module>
    model = whisper.load_model('large', download_root='/media/sean/MusIX/OpenAI-Whisper/pip')
  File "/home/sean/.local/lib/python3.10/site-packages/whisper/__init__.py", line 156, in load_model
    return model.to(device)
  File "/home/sean/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1173, in to
    return self._apply(convert)
  File "/home/sean/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 779, in _apply
    module._apply(fn)
  File "/home/sean/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 779, in _apply
    module._apply(fn)
  File "/home/sean/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 779, in _apply
    module._apply(fn)
  [Previous line repeated 2 more times]
  File "/home/sean/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 804, in _apply
    param_applied = fn(param)
  File "/home/sean/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1159, in convert
    return t.to(
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 26.00 MiB. GPU 

import whisper
model = whisper.load_model('medium', download_root='/media/sean/MusIX/OpenAI-Whisper/pip') #installing medium model, should work, large is too.. large. 6 year old laptop can't handle it
